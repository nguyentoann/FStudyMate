import re
import datetime
import json

# === Helper function ===
def extract_info_from_block(block: str):
    lines = block.strip().splitlines()
    if not any("AC" in line or "DAIKIN" in line.upper() for line in lines):
        return None
    
    result = {
        'device_type': 'AC',
        'brand': 'Daikin',
        'command_type': 'raw',
        'command_data': None,
        'name': '',
        'description': '',
        'ac_mode': '',
        'ac_temperature': None,
        'ac_fan_speed': '',
        'ac_swing': '',
        'category': '',
        'active': 1
    }

    for line in lines:
        if line.startswith("Protocol"):
            if "DAIKIN64" in line:
                result['command_type'] = 'DAIKIN64'
        elif line.startswith("Code"):
            code_match = re.search(r'0x[0-9A-Fa-f]+', line)
            if code_match:
                result['command_data'] = code_match.group(0)
        elif "Mesg Desc." in line:
            desc = line.split(":",1)[1].strip()
            result['description'] = desc
            if "Temp:" in desc:
                if m := re.search(r'Temp:\s*(\d+)C', desc):
                    result['ac_temperature'] = int(m.group(1))
                    result['name'] = f"Set Temp {m.group(1)}Â°C"
                    result['category'] = "Temperature"
            if "Mode:" in desc:
                if m := re.search(r'Mode:\s*\d+\s*\((.*?)\)', desc):
                    result['ac_mode'] = m.group(1).lower()
            if "Fan:" in desc:
                if m := re.search(r'Fan:\s*\d+\s*\((.*?)\)', desc):
                    result['ac_fan_speed'] = m.group(1).lower()
        elif "rawData" in line and '{' in line:
            raw_list = line.split('{',1)[1].rsplit('}',1)[0]
            result['command_data'] = [int(x.strip()) for x in raw_list.split(',')]
            result['command_type'] = 'raw'
            if not result['name']:
                result['name'] = 'Raw Command'
            if not result['description']:
                result['description'] = 'IR signal in raw format'

    return result

def generate_insert_sql(data):
    now = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    cmd = json.dumps(data['command_data']) if isinstance(data['command_data'], list) else data['command_data']
    return f"""
INSERT INTO ir_commands (
    name, device_type, brand, command_type, command_data, description,
    icon, category, ac_mode, ac_temperature, ac_fan_speed, ac_swing,
    tv_input, created_at, updated_at, active
) VALUES (
    "{data['name']}", "{data['device_type']}", "{data['brand']}", "{data['command_type']}", 
    '{cmd}', "{data['description']}",
    "", "{data['category']}", "{data['ac_mode']}", 
    {data['ac_temperature'] or 'NULL'}, "{data['ac_fan_speed']}", "{data['ac_swing']}", "", 
    "{now}", "{now}", {data['active']}
);
""".strip()

# === Example Input ===
data_block = """
Timestamp : 000456.329
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0xA430101000134216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 30C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:13, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9744, 9748,  9752, 9694,  4600, 2472,  370, 356,  372, 928,  368, 930,  368, 358,  372, 928,  368, 358,  370, 358,  370, 360,  368, 358,  368, 930,  368, 358,  368, 358,  368, 358,  370, 358,  370, 928,  368, 360,  378, 924,  374, 924,  366, 364,  378, 346,  366, 954,  346, 360,  370, 380,  344, 364,  362, 368,  380, 342,  368, 360,  370, 376,  344, 360,  368, 366,  360, 362,  362, 364,  370, 372,  366, 346,  362, 364,  362, 364,  362, 954,  368, 340,  362, 368,  368, 356,  360, 368,  374, 368,  344, 368,  366, 378,  342, 964,  336, 370,  356, 366,  362, 366,  366, 378,  342, 370,  356, 380,  364, 368,  342, 960,  338, 962,  322, 412,  334, 388,  310, 420,  306, 416,  310, 988,  310, 416,  312, 430,  302, 986,  344, 400,  324, 960,  352, 20000,  4526};  // DAIKIN64 A430101000134216
uint64_t data = 0xA430101000134216;


Timestamp : 000459.760
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0x2429101000134216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 29C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:13, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9756, 9740,  9760, 9702,  4578, 2476,  370, 382,  350, 938,  358, 938,  360, 366,  360, 930,  368, 358,  370, 358,  372, 382,  342, 358,  368, 930,  368, 360,  368, 358,  374, 354,  368, 358,  368, 932,  372, 354,  368, 932,  368, 932,  368, 356,  368, 360,  368, 932,  366, 360,  368, 360,  366, 362,  364, 368,  360, 358,  366, 360,  366, 362,  366, 362,  366, 362,  366, 362,  366, 358,  366, 362,  366, 362,  364, 362,  364, 364,  364, 932,  364, 368,  360, 362,  364, 370,  356, 364,  364, 362,  364, 364,  364, 364,  362, 938,  360, 368,  362, 362,  376, 368,  346, 960,  342, 364,  364, 384,  340, 982,  316, 366,  360, 974,  330, 368,  354, 392,  338, 366,  364, 374,  350, 972,  328, 368,  356, 400,  332, 972,  324, 368,  378, 368,  336, 20020,  4530};  // DAIKIN64 2429101000134216
uint64_t data = 0x2429101000134216;


Timestamp : 000462.630
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0x1428101000134216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 28C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:13, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9742, 9750,  9764, 9688,  4584, 2486,  366, 358,  372, 932,  366, 930,  368, 366,  380, 922,  372, 364,  354, 352,  386, 342,  370, 368,  372, 922,  370, 354,  380, 356,  376, 354,  352, 366,  362, 938,  362, 366,  360, 952,  360, 916,  370, 356,  368, 358,  368, 932,  374, 358,  366, 356,  366, 360,  368, 360,  368, 366,  366, 356,  366, 360,  366, 360,  368, 360,  366, 362,  368, 360,  366, 360,  366, 360,  366, 362,  364, 362,  366, 934,  368, 358,  368, 360,  364, 362,  366, 362,  364, 362,  364, 362,  364, 362,  366, 934,  340, 386,  366, 360,  364, 366,  360, 364,  362, 364,  364, 362,  364, 936,  362, 364,  362, 938,  360, 366,  362, 366,  360, 366,  366, 360,  362, 960,  342, 362,  360, 962,  342, 364,  360, 366,  360, 368,  360, 20020,  4536};  // DAIKIN64 1428101000134216
uint64_t data = 0x1428101000134216;


Timestamp : 000465.410
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0xA9190784 (69 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 27C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:14, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9724, 9710,  9742, 9676,  4584, 2460,  380, 368,  348, 932,  368, 946,  372, 340,  368, 932,  364, 376,  370, 344,  366, 362,  374, 368,  370, 920,  380, 342,  370, 362,  368, 354,  364, 364,  360, 970,  330, 366,  374, 968,  324, 970,  320, 368,  364, 386,  334, 964,  336, 368,  368, 370,  366, 352,  358, 368,  356, 370,  374, 368,  368, 346,  358, 368,  380, 368,  336, 390,  350, 380,  332, 406,  334, 380,  312, 418,  312, 434,  290, 1008,  294, 412,  336, 400,  320, 410,  322, 390,  358, 368,  336, 396,  328, 412,  314, 980,  302, 426,  314, 414,  316, 396,  310, 1006,  314, 978,  314, 980,  316, 428,  302, 404,  308, 992,  308, 420,  308, 418,  306, 422,  306, 420,  306, 994,  306, 426,  300, 422,  304, 426,  300, 424,  304, 424,  304, 20026,  4496};  // UNKNOWN A9190784


Timestamp : 000468.727
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0xF426101000134216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 26C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:13, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9714, 9744,  9702, 9678,  4584, 2460,  368, 370,  370, 920,  368, 932,  380, 368,  344, 944,  366, 356,  362, 360,  364, 360,  376, 368,  348, 934,  364, 364,  364, 364,  370, 380,  342, 368,  362, 968,  328, 366,  364, 956,  342, 958,  348, 378,  336, 366,  368, 968,  324, 380,  372, 342,  360, 368,  360, 370,  360, 370,  356, 368,  378, 362,  356, 364,  370, 368,  340, 408,  324, 386,  336, 408,  298, 412,  314, 414,  324, 424,  288, 1004,  300, 412,  316, 408,  320, 406,  354, 374,  336, 390,  348, 380,  314, 428,  314, 972,  306, 426,  322, 408,  314, 416,  314, 402,  324, 978,  316, 982,  320, 412,  322, 402,  302, 992,  306, 420,  306, 420,  306, 420,  304, 428,  300, 994,  304, 422,  306, 996,  302, 996,  304, 996,  304, 1018,  280, 20026,  4512};  // DAIKIN64 F426101000134216
uint64_t data = 0xF426101000134216;


Timestamp : 000471.190
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0xE425101000134216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 25C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:13, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9716, 9742,  9734, 9690,  4566, 2484,  354, 362,  368, 924,  366, 928,  378, 370,  342, 934,  366, 360,  366, 368,  358, 366,  366, 356,  366, 956,  346, 362,  368, 358,  362, 372,  356, 364,  360, 936,  362, 366,  360, 944,  358, 960,  336, 368,  366, 362,  360, 960,  338, 368,  360, 366,  364, 364,  362, 364,  360, 370,  358, 366,  360, 374,  354, 368,  358, 368,  358, 370,  358, 370,  356, 392,  336, 390,  312, 416,  334, 392,  312, 990,  314, 410,  312, 416,  312, 416,  334, 394,  314, 412,  332, 392,  334, 392,  310, 992,  306, 416,  312, 416,  334, 392,  310, 990,  310, 418,  310, 990,  312, 416,  308, 418,  310, 988,  308, 426,  304, 422,  316, 414,  300, 424,  304, 994,  306, 426,  298, 424,  316, 984,  326, 978,  320, 978,  296, 20032,  4498};  // DAIKIN64 E425101000134216
uint64_t data = 0xE425101000134216;


Timestamp : 000473.171
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0xD424101000134216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 24C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:13, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9714, 9726,  9724, 9670,  4606, 2462,  368, 338,  366, 936,  382, 932,  354, 354,  368, 934,  362, 370,  370, 354,  360, 366,  380, 342,  366, 948,  352, 358,  364, 376,  370, 352,  356, 364,  372, 968,  324, 368,  380, 958,  314, 950,  348, 368,  384, 358,  368, 942,  358, 360,  366, 358,  368, 358,  360, 372,  360, 360,  370, 372,  340, 366,  382, 344,  358, 370,  356, 368,  356, 370,  336, 390,  356, 392,  334, 392,  334, 398,  306, 986,  312, 418,  310, 414,  312, 416,  312, 416,  310, 416,  334, 392,  334, 400,  326, 966,  310, 418,  312, 416,  310, 416,  308, 420,  308, 418,  308, 990,  308, 418,  308, 418,  310, 988,  310, 420,  308, 420,  306, 422,  304, 420,  308, 996,  300, 422,  306, 992,  306, 422,  306, 998,  300, 996,  304, 20032,  4508};  // DAIKIN64 D424101000134216
uint64_t data = 0xD424101000134216;


Timestamp : 000475.471
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0xC423101000134216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 23C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:13, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9704, 9716,  9752, 9668,  4590, 2454,  370, 356,  370, 930,  368, 952,  368, 336,  370, 934,  388, 336,  370, 370,  368, 366,  348, 360,  368, 930,  378, 368,  368, 340,  368, 362,  382, 364,  352, 928,  364, 360,  366, 956,  342, 934,  366, 362,  366, 360,  374, 924,  366, 362,  380, 370,  344, 360,  368, 374,  352, 360,  364, 364,  362, 374,  368, 370,  340, 360,  368, 360,  364, 374,  366, 368,  346, 364,  366, 380,  360, 360,  364, 942,  370, 340,  368, 366,  378, 366,  336, 368,  370, 368,  348, 368,  378, 368,  342, 960,  346, 360,  358, 392,  344, 360,  360, 980,  324, 970,  324, 370,  360, 366,  364, 362,  360, 984,  312, 394,  334, 372,  358, 388,  334, 392,  336, 964,  336, 390,  312, 416,  312, 414,  312, 986,  314, 984,  336, 19994,  4530};  // DAIKIN64 C423101000134216
uint64_t data = 0xC423101000134216;


Timestamp : 000477.691
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0xB422101000134216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 22C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:13, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9690, 9726,  9752, 9644,  4592, 2454,  370, 376,  366, 918,  368, 928,  374, 368,  368, 920,  378, 364,  364, 358,  362, 344,  390, 354,  366, 918,  370, 368,  360, 368,  364, 358,  364, 356,  380, 922,  372, 380,  368, 926,  364, 930,  370, 342,  368, 372,  370, 922,  366, 362,  358, 360,  366, 364,  372, 354,  368, 356,  376, 362,  368, 354,  362, 386,  342, 362,  372, 370,  348, 364,  364, 380,  370, 338,  380, 358,  356, 368,  358, 946,  362, 372,  344, 364,  366, 370,  354, 386,  358, 348,  376, 350,  360, 382,  360, 946,  336, 368,  360, 368,  360, 368,  360, 366,  360, 960,  314, 392,  358, 368,  360, 368,  358, 960,  340, 366,  334, 392,  364, 382,  336, 392,  336, 964,  312, 414,  312, 988,  312, 988,  334, 392,  312, 986,  336, 19992,  4530};  // DAIKIN64 B422101000134216
uint64_t data = 0xB422101000134216;


Timestamp : 000479.620
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0xA421101000134216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 21C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:13, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9712, 9734,  9746, 9694,  4588, 2456,  368, 360,  376, 924,  368, 930,  368, 360,  372, 928,  368, 360,  368, 358,  368, 358,  370, 356,  374, 926,  374, 352,  368, 360,  366, 360,  366, 360,  366, 934,  366, 362,  366, 934,  364, 942,  358, 362,  366, 360,  364, 934,  366, 364,  368, 358,  382, 344,  368, 366,  378, 342,  364, 362,  380, 368,  348, 368,  368, 366,  346, 364,  366, 360,  364, 362,  366, 362,  370, 368,  368, 354,  360, 936,  362, 382,  364, 344,  364, 364,  380, 368,  366, 338,  364, 368,  380, 342,  364, 960,  338, 368,  382, 354,  360, 364,  356, 958,  342, 360,  366, 362,  360, 368,  358, 372,  372, 966,  332, 368,  344, 366,  360, 366,  380, 374,  334, 962,  340, 364,  362, 376,  368, 966,  324, 376,  344, 956,  314, 20016,  4552};  // DAIKIN64 A421101000134216
uint64_t data = 0xA421101000134216;


Timestamp : 000482.106
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0xA420101000144216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 20C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:14, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9722, 9732,  9752, 9650,  4588, 2456,  370, 358,  370, 928,  368, 930,  370, 358,  368, 932,  368, 358,  370, 358,  370, 360,  368, 356,  374, 924,  370, 358,  372, 356,  370, 362,  364, 358,  368, 930,  368, 360,  368, 358,  370, 358,  374, 924,  366, 362,  366, 934,  366, 360,  368, 358,  368, 358,  368, 360,  366, 360,  368, 362,  386, 364,  366, 342,  360, 366,  368, 378,  366, 336,  368, 368,  378, 342,  368, 362,  364, 362,  386, 924,  368, 368,  342, 364,  366, 378,  368, 340,  362, 364,  364, 364,  380, 346,  362, 940,  358, 364,  360, 368,  366, 360,  382, 368,  346, 360,  366, 370,  354, 370,  374, 348,  360, 964,  334, 370,  368, 380,  336, 370,  356, 392,  338, 980,  334, 368,  342, 372,  360, 956,  360, 354,  364, 964,  296, 19994,  4528};  // DAIKIN64 A420101000144216
uint64_t data = 0xA420101000144216;


Timestamp : 000484.646
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0x2419101000144216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 19C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:14, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9694, 9724,  9750, 9670,  4612, 2434,  376, 368,  366, 914,  394, 918,  372, 366,  346, 926,  370, 382,  368, 354,  358, 354,  368, 360,  370, 942,  364, 346,  392, 336,  374, 368,  370, 342,  368, 930,  372, 380,  346, 358,  372, 368,  358, 938,  356, 360,  366, 942,  356, 366,  364, 360,  366, 372,  356, 358,  370, 360,  378, 370,  342, 360,  364, 368,  378, 368,  346, 362,  370, 378,  340, 364,  372, 370,  366, 352,  356, 372,  356, 942,  370, 352,  370, 356,  366, 362,  360, 370,  370, 356,  358, 366,  360, 368,  358, 972,  334, 380,  354, 378,  356, 366,  346, 956,  338, 368,  358, 370,  358, 964,  334, 962,  334, 392,  312, 414,  312, 416,  310, 416,  316, 410,  310, 988,  336, 392,  336, 392,  312, 986,  312, 416,  334, 394,  334, 19978,  4522};  // DAIKIN64 2419101000144216
uint64_t data = 0x2419101000144216;


Timestamp : 000487.033
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0x1BB352D4 (69 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 18C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:14, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9754, 9700,  9728, 9656,  4564, 2460,  372, 358,  360, 948,  350, 948,  364, 358,  358, 934,  368, 356,  368, 366,  358, 362,  362, 358,  370, 930,  368, 358,  368, 360,  368, 360,  368, 358,  370, 930,  366, 360,  366, 360,  366, 362,  370, 930,  364, 360,  366, 934,  366, 362,  372, 356,  364, 362,  364, 370,  358, 364,  364, 362,  364, 364,  364, 366,  360, 366,  362, 364,  362, 366,  362, 366,  362, 364,  366, 362,  358, 370,  358, 960,  338, 368,  360, 366,  360, 368,  358, 370,  358, 368,  360, 368,  358, 372,  354, 962,  336, 370,  356, 370,  358, 390,  336, 392,  336, 392,  312, 418,  308, 988,  326, 976,  324, 406,  308, 416,  310, 434,  326, 382,  334, 400,  334, 962,  328, 412,  292, 992,  306, 418,  330, 416,  290, 418,  320, 19962,  4502};  // UNKNOWN 1BB352D4


Timestamp : 000489.871
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0x417101000144216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 17C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:14, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9718, 9726,  9766, 9680,  4592, 2452,  368, 374,  368, 924,  370, 924,  370, 380,  368, 910,  364, 360,  372, 378,  368, 336,  370, 360,  364, 934,  368, 360,  370, 360,  376, 356,  362, 376,  350, 930,  370, 356,  370, 364,  360, 364,  368, 942,  366, 344,  368, 932,  368, 360,  368, 358,  370, 358,  368, 358,  374, 354,  366, 360,  366, 362,  366, 366,  360, 362,  364, 364,  364, 362,  366, 362,  370, 358,  364, 362,  368, 358,  368, 932,  364, 362,  364, 364,  364, 362,  364, 362,  364, 362,  364, 364,  364, 366,  362, 936,  360, 366,  362, 364,  362, 370,  358, 974,  324, 968,  330, 964,  338, 366,  360, 968,  332, 368,  358, 368,  356, 370,  360, 366,  358, 368,  358, 962,  338, 368,  358, 368,  358, 394,  334, 390,  358, 368,  334, 20010,  4526};  // DAIKIN64 417101000144216
uint64_t data = 0x417101000144216;


Timestamp : 000492.251
Library   : v2.8.6

Protocol  : DAIKIN64
Code      : 0xF416101000144216 (64 Bits)
Mesg Desc.: Power Toggle: Off, Mode: 2 (Cool), Temp: 16C, Fan: 4 (Medium), Turbo: Off, Quiet: Off, Swing(V): Off, Sleep: Off, Clock: 00:14, On Timer: Off, Off Timer: Off
uint16_t rawData[137] = {9694, 9722,  9694, 9676,  4556, 2466,  372, 354,  388, 910,  384, 914,  382, 344,  370, 950,  346, 358,  368, 362,  364, 366,  378, 368,  342, 938,  362, 364,  380, 368,  364, 342,  368, 358,  362, 940,  360, 364,  368, 374,  356, 360,  380, 958,  318, 388,  350, 950,  362, 366,  358, 368,  360, 360,  368, 358,  346, 368,  336, 392,  358, 368,  360, 370,  358, 368,  358, 368,  360, 366,  360, 368,  360, 366,  364, 364,  356, 392,  336, 966,  326, 398,  316, 420,  312, 408,  312, 414,  312, 416,  312, 414,  312, 422,  328, 964,  334, 394,  334, 392,  334, 400,  304, 420,  308, 990,  310, 988,  310, 420,  308, 990,  308, 418,  308, 418,  310, 418,  308, 418,  310, 418,  308, 990,  308, 420,  306, 992,  306, 994,  306, 992,  306, 994,  306, 19980,  4492};  // DAIKIN64 F416101000144216
uint64_t data = 0xF416101000144216;
"""

# === Run ===
combined = data_block  # your full multi-block string
blocks = re.split(r'(?=Timestamp\s*:)', combined)
for blk in blocks:
    info = extract_info_from_block(blk)
    if info:
        print(generate_insert_sql(info))
